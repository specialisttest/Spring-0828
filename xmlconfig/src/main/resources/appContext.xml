<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop = "http://www.springframework.org/schema/aop"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop 
   		http://www.springframework.org/schema/aop/spring-aop.xsd 
        " 
        
>
        <!--
        default-init-method="onCreate" 
        default-destroy-method=""
        default-lazy-init="true"
         -->
    <context:property-placeholder location="house.properties"/>
         
	<bean id="bricks" class="ru.specialist.building.Brick"
		scope="prototype" primary="true"/>
	
	<bean id="logs" class="ru.specialist.building.Wood"
		scope="prototype" autowire-candidate="false"/>
	
	<!-- 
	<bean id="wall" class="ru.specialist.building.Brick"
		scope="prototype"/>
		 -->
	<bean id="woodFrame" class="ru.specialist.building.WoodWindow" lazy-init="true"
		primary="true"/>
	<bean id="plasticFrame" class="ru.specialist.building.PlasticWindow" lazy-init="true"/>
	
	<bean id="outDoor" class="ru.specialist.building.MetalDoor" lazy-init="true"/>
	<bean id="innerDoor" class="ru.specialist.building.WoodDoor" scope="prototype"/>
	
	<!-- 
	<bean id="house" class="ru.specialist.building.House" lazy-init="true"
		p:height="3" p:wall-ref="logs"
	>
		<property name="window" ref="woodFrame"/>
	</bean>
	 -->
	 <bean id="house" class="ru.specialist.building.House" lazy-init="true"
	     autowire="byType"
		 init-method="onCreate"
		 destroy-method="onDestroy"
		 >
		 <constructor-arg ref="woodFrame"/>
		 <constructor-arg value="${house.height}"/>
		 <!-- 
		  <constructor-arg name="height" value="${house.height}"/>
		  -->
		 <property name="doors">
		 	<map>
		 		<entry key="A" value-ref="outDoor"/>
		 		<entry key="B" value-ref="innerDoor"/>
		 		<entry key="C" value-ref="innerDoor"/>
		 	</map>
		 	<!-- 
		 	<list>
		 		<ref bean="outDoor"/>
		 		<ref bean="innerDoor"/>
		 		<ref bean="innerDoor"/>
		 		<bean class="ru.specialist.building.WoodDoor" />
		 	</list>
		 	 -->
		 </property>
	</bean>
	
	<bean id="countryFactory" class="ru.specialist.xmlconfig.CountryFactory"/>
	
	<bean id="usa" class="ru.specialist.xmlconfig.Country"
		p:title="USA" p:cities="#{cities.?[population gt 100000 and state eq 'TX']}"
		factory-method="getCountry"
		factory-bean="countryFactory"
		/>
	
	<util:list id="cities">
		 <!-- private beans -->
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Chicago" p:state="IL" p:population="2853114"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Atlanta" p:state="GA" p:population="537958"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Dallas" p:state="TX" p:population="1279910"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Houston" p:state="TX" p:population="2242193"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Odessa" p:state="TX" p:population="90943"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="El Paso" p:state="TX" p:population="613190"/>
		 <bean class="ru.specialist.xmlconfig.City"
		 	p:name="Jal" p:state="NM" p:population="1996"/>
		 <bean class="ru.specialist.xmlconfig.City"
	 		p:name="Las Cruces" p:state="NM" p:population="91865"/>
	 </util:list>
	 
	 <!--  
	 SpEL - Spring expression language
	 value="#{myPoint}"
	 value="#{doorShop.createDoor().title}" NPE !!!
	 value="#{doorShop.createDoor()?.title?.toUpperCase()}" // Elvis operator
	 value="#{T(java.lang.Math).random()}"
	 value="#{new ru.specialist.xmlconfig.City()}"
	 value="#{2+3*4-5/2 % 10}"
	 value="#{ ==  !=  lt gt le ge eq}"
	 value="#{ and or  not !}"
 	 value="#{ ? : }"
 	 value="#{ str != null ? str.toUpperCase() : 'empty' }"
	 value="#{ str.toUpperCase() ?: 'empty' }"
	 value="#{ admin.email matches '[a-zA-Z]+@[a-zA-Z]+.com' }"
	 
	 value="#{cities[0]}" // City
	 value="#{cities[T(java.lang.Math).random() * cities.size()]}" // City
	 value="#{cities[new java.util.Random().nextInt( cities.size() ) ]}" // City
	 value="#{house.doors['A']}" // MetalDoor
	 
	 value="#{cities.?[population gt 100000]}" // List<City>
	 
 	 value="#{cities.^[population gt 100000]}" // City
	 value="#{cities.$[population gt 100000]}" // City
	 
	 value="#{cities.![name]}" // List<String>
	 value="#{cities.![name + ', ' + state]}" // List<String> 'Chicago, IL' ...
	 
	 value="#{cities.?[population gt 100000].![name + ', ' + state]}" //List<String> 'Chicago, IL' ...
	 -->
	
	

</beans>